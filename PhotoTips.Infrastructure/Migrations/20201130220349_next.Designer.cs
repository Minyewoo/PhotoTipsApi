// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PhotoTips.Infrastructure.Repositories;

namespace PhotoTips.Infrastructure.Migrations
{
    [DbContext(typeof(PhotoTipsDbContext))]
    [Migration("20201130220349_next")]
    partial class next
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("PhotoTips.Core.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("PhotoTips.Core.Models.LectureContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<int>("IndexNumber")
                        .HasColumnType("integer");

                    b.Property<int?>("ModuleEntryId")
                        .HasColumnType("integer");

                    b.Property<int?>("ModuleEntryId1")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ModuleEntryId");

                    b.HasIndex("ModuleEntryId1");

                    b.ToTable("LectureContents");
                });

            modelBuilder.Entity("PhotoTips.Core.Models.Module", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("IndexNumber")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("PhotoTips.Core.Models.ModuleEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("AdditionalInfo")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("IndexNumber")
                        .HasColumnType("integer");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ModuleId");

                    b.ToTable("ModuleEntries");
                });

            modelBuilder.Entity("PhotoTips.Core.Models.Photo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("FileUrl")
                        .HasColumnType("text");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("integer");

                    b.Property<string>("ThumbnailUrl")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("PhotoTips.Core.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ResidenceCityId")
                        .HasColumnType("integer");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ResidenceCityId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PhotoTips.Core.Models.LectureContent", b =>
                {
                    b.HasOne("PhotoTips.Core.Models.ModuleEntry", null)
                        .WithMany("TextLecture")
                        .HasForeignKey("ModuleEntryId");

                    b.HasOne("PhotoTips.Core.Models.ModuleEntry", null)
                        .WithMany("VideoLecture")
                        .HasForeignKey("ModuleEntryId1");
                });

            modelBuilder.Entity("PhotoTips.Core.Models.ModuleEntry", b =>
                {
                    b.HasOne("PhotoTips.Core.Models.Module", null)
                        .WithMany("Entries")
                        .HasForeignKey("ModuleId");
                });

            modelBuilder.Entity("PhotoTips.Core.Models.Photo", b =>
                {
                    b.HasOne("PhotoTips.Core.Models.User", "Owner")
                        .WithMany("Photos")
                        .HasForeignKey("OwnerId");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("PhotoTips.Core.Models.User", b =>
                {
                    b.HasOne("PhotoTips.Core.Models.City", "ResidenceCity")
                        .WithMany()
                        .HasForeignKey("ResidenceCityId");

                    b.Navigation("ResidenceCity");
                });

            modelBuilder.Entity("PhotoTips.Core.Models.Module", b =>
                {
                    b.Navigation("Entries");
                });

            modelBuilder.Entity("PhotoTips.Core.Models.ModuleEntry", b =>
                {
                    b.Navigation("TextLecture");

                    b.Navigation("VideoLecture");
                });

            modelBuilder.Entity("PhotoTips.Core.Models.User", b =>
                {
                    b.Navigation("Photos");
                });
#pragma warning restore 612, 618
        }
    }
}
