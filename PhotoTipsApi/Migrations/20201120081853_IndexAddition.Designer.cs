// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PhotoTipsApi.Repositories;

namespace PhotoTipsApi.Migrations
{
    [DbContext(typeof(PhotoTipsDbContext))]
    [Migration("20201120081853_IndexAddition")]
    partial class IndexAddition
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("PhotoTipsApi.Models.City", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Name");

                    b.ToTable("cities");
                });

            modelBuilder.Entity("PhotoTipsApi.Models.LectureContent", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<int>("IndexNumber")
                        .HasColumnType("integer")
                        .HasColumnName("index_number");

                    b.Property<string>("ModuleEntryId")
                        .HasColumnType("text");

                    b.Property<string>("ModuleEntryId1")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.HasIndex("ModuleEntryId");

                    b.HasIndex("ModuleEntryId1");

                    b.ToTable("lecture_contents");
                });

            modelBuilder.Entity("PhotoTipsApi.Models.Module", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("IndexNumber")
                        .HasColumnType("integer")
                        .HasColumnName("index_number");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("modules");
                });

            modelBuilder.Entity("PhotoTipsApi.Models.ModuleEntry", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<int>("IndexNumber")
                        .HasColumnType("integer")
                        .HasColumnName("index_number");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.Property<string>("module_id")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("module_id");

                    b.ToTable("module_entries");
                });

            modelBuilder.Entity("PhotoTipsApi.Models.Photo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<string>("FileUrl")
                        .HasColumnType("text")
                        .HasColumnName("file_url");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("ThumbnailUrl")
                        .HasColumnType("text")
                        .HasColumnName("thumbnail_url");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("PhotoTipsApi.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean")
                        .HasColumnName("is_admin");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text")
                        .HasColumnName("password_hash");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text")
                        .HasColumnName("phone_number");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("registration_date");

                    b.Property<string>("Surname")
                        .HasColumnType("text")
                        .HasColumnName("surname");

                    b.Property<string>("residence_city_id")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("residence_city_id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("PhotoTipsApi.Models.LectureContent", b =>
                {
                    b.HasOne("PhotoTipsApi.Models.ModuleEntry", null)
                        .WithMany("TextLecture")
                        .HasForeignKey("ModuleEntryId");

                    b.HasOne("PhotoTipsApi.Models.ModuleEntry", null)
                        .WithMany("VideoLecture")
                        .HasForeignKey("ModuleEntryId1");
                });

            modelBuilder.Entity("PhotoTipsApi.Models.ModuleEntry", b =>
                {
                    b.HasOne("PhotoTipsApi.Models.Module", "Module")
                        .WithMany("Entries")
                        .HasForeignKey("module_id");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("PhotoTipsApi.Models.Photo", b =>
                {
                    b.HasOne("PhotoTipsApi.Models.User", null)
                        .WithMany("Photos")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("PhotoTipsApi.Models.User", b =>
                {
                    b.HasOne("PhotoTipsApi.Models.City", "ResidenceCity")
                        .WithMany("Users")
                        .HasForeignKey("residence_city_id");

                    b.Navigation("ResidenceCity");
                });

            modelBuilder.Entity("PhotoTipsApi.Models.City", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("PhotoTipsApi.Models.Module", b =>
                {
                    b.Navigation("Entries");
                });

            modelBuilder.Entity("PhotoTipsApi.Models.ModuleEntry", b =>
                {
                    b.Navigation("TextLecture");

                    b.Navigation("VideoLecture");
                });

            modelBuilder.Entity("PhotoTipsApi.Models.User", b =>
                {
                    b.Navigation("Photos");
                });
#pragma warning restore 612, 618
        }
    }
}
